{
//FixMe: some micro Instructions are still producing null elements

    "name": "MIMA",             // declare name
    "instruction_length": 24,   // declade instruction length
    
    "registers": {                  // define existing (required) registers
        "program_counter": "IAR",   // register containing the current program address
        "alu": [                    // alu specific registers
            "X",
            "Y",
            "Z"
        ],
        "float": {},            // float registers
        "integer": {            // 
            "IR": 1,
            "EINS": 2,
            "AKKU": 3,
            "SAR": 4,
            "SDR": 5
        }
    },
    "memory": {
        "word_length": 24,
        "address_length": 20,
        "access_delay": 3,
        "byte_order": "le",
        "possible_opcode_lengths": [4, 8],
        "opcode_position": "MOST"
    },
    "alu_operations": [
        "None",
        "ADD",
        "RR",
        "AND",
        "OR",
        "XOR",
        "NEG",
        "JMN"
    ],
    "fetch": [
        ["SAR", "IAR", "r"],
        ["X", "IAR", "r"],
        ["Y", "EINS", "r"],
        ["ADD", "Z", "X", "Y"],
        ["IAR", "Z", "r"],
        ["IR", "SDR", ""]
    ],
    "instructions": {
        "LDC": {                    // load constant
            "arguments": ["[const]"],
            "opcode": "0000",
            "execution": [
                ["AKKU", "[const]", ""]     // set AKKU to contents of constant
            ],
            "translation": [
                "0000",                     // op-code
                "[const]<20>"               // 20 bit constant
            ]

        },
        "ADD [addr]": {
        "arguments": ["[adr]"],
                    "opcode": "0011",
            "arguments": ["[adr]"],
            "opcode": "0011",
            "execution": [
                ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
                // to     from memoryAction [to         from]
                ["X", "AKKU", "r"],
                ["", "", "r", ["SDR", "<mem_data>"]],
                ["Y", "SDR", ""],
                ["ADD", "Z", "X", "Y", ""],
                //alu-op to   x   y  memAction
                ["AKKU", "Z", ""]
            ],
            "translation": [
                "0011",
                "[addr]<20>"
            ]
        },
        "LDV [addr]": {
        "arguments": ["[addr]"],
                    "opcode": "0001",
            "execution": [
                ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
                ["", "", "r"] ,
                ["", "", "r", ["SDR", "<mem_data>"]],
                ["AKKU", "SDR", ""]
            ],
            "translation": [
              "0001",
              "[addr]<20>"
            ]
        },
        "STV [addr]": {
        "arguments": ["[addr]"],
                    "opcode": "0010",
            "execution": [
                ["SAR", "[addr]", "w", ["<mem_addr>", "SAR"]],
                ["SDR", "AKKU", "w"],
                ["", "", "w", ["<mem_data>", "SDR"]]
            ],
            "translation": [
              "0010",
              "[addr]<20>"
            ]
        },
        "AND [addr]": {
        "arguments": ["[addr]"],
                    "opcode": "0100",
            "execution": [
                ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
                ["X", "AKKU", "r"],
                ["", "", "r", ["SDR", "<mem_data>"]],
                ["Y", "SDR", ""],
                ["AND", "Z", "X", "Y", ""],
                ["AKKU", "Z", ""]
            ],
            "translation": [
              "0100",
              "[addr]<20>"
            ]
        },
        "OR [addr]": {
        "arguments": ["[addr]"],
                    "opcode": "0101",
            "execution": [
                ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
                ["X", "AKKU", "r"],
                ["", "", "r", ["SDR", "<mem_data>"]],
                ["Y", "SDR", ""],
                ["OR", "Z", "X", "Y", ""],
                ["AKKU", "Z", ""]
            ],
            "translation": [
              "0101",
              "[addr]<20>"
            ]
        },
        "XOR": {
            "arguments": ["[addr]"],
            "opcode": "0110",
            "execution": [
                ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
                ["X", "AKKU", "r"],
                ["", "", "r", ["SDR", "<mem_data>"]],
                ["Y", "SDR", ""],
                ["XOR", "Z", "X", "Y", ""],
                ["AKKU", "Z", ""]
            ],
            "translation": [
              "0110",
              "[addr]<20>"
            ]
        },
        "HALT": {
            "execution": [
                ["PAUSE"]
            ],
            "translation": [
              "11110000",
              "0000000000000000"
            ]
        },
        "NOT": {
            "execution": [
                ["X", "AKKU", ""],
                ["NEG", "Z", "X", "", ""],
                ["AKKU", "Z", ""]
                        ],
            "translation": [
              "11110001",
              "0000000000000000"
            ]
        },
        "RAR": {
            "execution": [
                ["X", "AKKU", ""],
                ["RR", "Z", "X", "", ""],
                ["AKKU", "Z", ""]
                        ],
            "translation": [
              "11110010",
              "0000000000000000"
            ]
        },
        "EQL [addr]": {
            "execution": [
              ["SAR", "[addr]", "r", ["<mem_addr>", "SAR"]],
              ["X", "AKKU", "r"],
              ["", "", "r", ["SDR", "<mem_data>"]],
              ["Y", "SDR", ""],
              ["EQ", "Z", "X", "Y", ""],
              ["AKKU", "Z"]
            ],
            "translation": [
              "0111",
              "[addr]<20>"
            ]
        },
        "JMP [addr]": {
            "execution": [
              ["IAR", "[addr]", ""]
            ],
            "translation": [
              "1000",
              "[addr]<20>"
            ]
        },
        "JMN [addr]": {
            "execution": [
              ["X", "AKKU", ""],
              ["Y", "[addr]", ""],
              ["IF", ["X", "0", "<"], ["PC", "[addr]"], "", ""]
              //if  cond  then
            ],
            "translation": [
              "1001",
              "[addr]<20>"
            ]
        }
    }
}